import ReactEcharts from "echarts-for-react";
const IndexChart = () => {
  const upColor = "#C3FCC2";
  const upBorderColor = "#86BF8C";
  const downColor = "#EF534F";
  const downBorderColor = "#E5403B";
  const data0 = splitData([['07/01/2071', 1104.0, 1071.66, 1078.0, 1089.65],
  ['07/02/2071', 1088.13, 1049.4, 1086.87, 1053.94],
  ['07/03/2071', 1100.36, 1061.2, 1069.4, 1061.2],
  ['07/04/2071', 1060.75, 953.15, 1060.75, 953.15],
  ['07/05/2071', 1011.58, 798.11, 944.58, 798.11],
  ['07/06/2071', 856.69, 760.58, 766.84, 830.28],
  ['07/07/2071', 941.83, 799.42, 828.17, 941.54],
  ['07/08/2071', 956.65, 910.54, 953.14, 953.4],
  ['07/09/2071', 969.37, 922.04, 958.08, 952.24],
  ['07/10/2071', 1017.45, 934.11, 951.56, 1017.16],
  ['07/11/2071', 1088.85, 1014.93, 1014.93, 1041.08],
  ['07/12/2071', 1030.07, 991.08, 1028.16, 1029.78],
  ['07/13/2071', 1057.81, 994.49, 1026.13, 1037.12],
  ['07/14/2071', 1057.45, 1037.66, 1040.9, 1055.52],
  ['07/15/2071', 1102.55, 1052.99, 1071.01, 1102.55],
  ['07/16/2071', 1123.45, 1097.46, 1099.88, 1122.79],
  ['07/17/2071', 1165.2, 1116.46, 1139.13, 1123.89],
  ['07/18/2071', 1127.59, 1086.48, 1115.81, 1086.73],
  ['07/19/2071', 1137.68, 1053.31, 1078.89, 1132.28],
  ['07/20/2071', 1168.79, 1103.06, 1111.99, 1131.21],
  ['07/21/2071', 1140.21, 1081.15, 1130.34, 1109.01],
  ['07/22/2071', 1170.59, 1133.28, 1133.28, 1163.85],
  ['07/23/2071', 1223.28, 1167.8, 1167.8, 1223.22],
  ['07/24/2071', 1209.71, 1194.8, 1202.65, 1201.85],
  ['07/25/2071', 1246.52, 1089.68, 1205.57, 1232.54],
  ['07/26/2071', 1270.64, 1123.26, 1232.75, 1172.03],
  ['07/27/2071', 1271.74, 1128.35, 1172.06, 1231.09],
  ['07/28/2071', 1292.72, 1212.55, 1231.05, 1291.49],
  ['07/29/2071', 1305.58, 1195.8, 1291.41, 1196.88],
  ['07/30/2071', 1197.02, 1111.23, 1197.02, 1150.65],
  ['07/31/2071', 1191.74, 1068.73, 1150.57, 1068.73],
  ['08/01/2071', 1097.0, 1022.12, 1068.57, 1025.89],
  ['08/02/2071', 1059.56, 918.78, 1025.81, 1029.15],
  ['08/03/2071', 1144.94, 1028.77, 1028.77, 1144.92],
  ['08/04/2071', 1188.56, 1129.64, 1144.89, 1188.49],
  ['08/05/2071', 1191.67, 1165.25, 1188.45, 1185.81],
  ['08/06/2071', 1272.9, 1180.42, 1186.01, 1249.95],
  ['08/07/2071', 1291.49, 1223.8, 1249.77, 1284.94],
  ['08/08/2071', 1309.67, 1280.01, 1285.06, 1301.91],
  ['08/09/2071', 1305.99, 1227.92, 1302.04, 1250.9],
  ['08/10/2071', 1271.43, 1243.11, 1250.82, 1271.32],
  ['08/11/2071', 1337.32, 1268.12, 1271.43, 1335.61],
  ['08/12/2071', 1398.92, 1335.73, 1335.73, 1398.36],
  ['08/13/2071', 1438.16, 1384.77, 1398.47, 1431.15],
  ['08/14/2071', 1439.24, 1399.19, 1431.39, 1439.24],
  ['08/15/2071', 1474.85, 1439.59, 1439.59, 1450.98],
  ['08/16/2071', 1466.26, 1414.09, 1451.21, 1439.68],
  ['08/17/2071', 1519.51, 1428.92, 1439.55, 1518.53],
  ['08/18/2071', 1518.4, 1435.73, 1518.4, 1470.48],
  ['08/19/2071', 1577.28, 1463.71, 1470.38, 1515.76],
  ['08/20/2071', 1530.29, 1499.22, 1515.79, 1506.68],
  ['08/21/2071', 1540.3, 1506.92, 1506.92, 1535.32],
  ['08/22/2071', 1555.0, 1505.02, 1535.51, 1530.61],
  ['08/23/2071', 1597.17, 1530.6, 1530.6, 1577.29],
  ['08/24/2071', 1577.15, 1480.96, 1577.15, 1520.01],
  ['08/25/2071', 1530.34, 1478.57, 1520.3, 1479.51],
  ['08/26/2071', 1535.04, 1473.28, 1479.75, 1530.86],
  ['08/27/2071', 1598.77, 1530.82, 1530.82, 1597.72],
  ['08/28/2071', 1641.46, 1596.9, 1597.56, 1641.08],
  ['08/29/2071', 1641.11, 1621.93, 1641.11, 1639.68],
  ['08/30/2071', 1670.44, 1619.88, 1639.99, 1651.41],
  ['08/31/2071', 1663.17, 1532.91, 1651.53, 1568.98],
  ['09/01/2071', 1619.93, 1517.14, 1569.0, 1521.88],
  ['09/02/2071', 1537.54, 1481.79, 1521.73, 1484.72],
  ['09/03/2071', 1525.98, 1465.53, 1484.48, 1512.6],
  ['09/04/2071', 1518.91, 1413.9, 1512.6, 1448.58],
  ['09/05/2071', 1450.52, 1411.52, 1448.58, 1411.52],
  ['09/06/2071', 1411.46, 1365.54, 1411.46, 1365.54],
  ['09/07/2071', 1365.68, 1325.85, 1365.59, 1344.68],
  ['09/08/2071', 1353.59, 1297.05, 1344.53, 1307.35],
  ['09/09/2071', 1343.87, 1307.41, 1307.41, 1332.16],
  ['09/10/2071', 1388.43, 1328.04, 1331.9, 1379.25],
  ['09/11/2071', 1450.28, 1379.3, 1379.3, 1450.21],
  ['09/12/2071', 1498.92, 1446.67, 1450.24, 1485.59],
  ['09/13/2071', 1485.59, 1456.2, 1485.59, 1460.39],
  ['09/14/2071', 1495.23, 1456.09, 1460.26, 1480.97],
  ['09/15/2071', 1522.44, 1460.27, 1480.87, 1497.59],
  ['09/16/2071', 1522.57, 1495.26, 1497.54, 1521.59],
  ['09/17/2071', 1558.47, 1514.97, 1521.62, 1522.96],
  ['09/18/2071', 1523.31, 1436.72, 1522.94, 1437.54],
  ['09/19/2071', 1467.94, 1437.57, 1437.59, 1465.12],
  ['09/20/2071', 1523.23, 1465.03, 1465.03, 1522.55],
  ['09/21/2071', 1543.15, 1510.09, 1522.68, 1540.85],
  ['09/22/2071', 1554.74, 1527.9, 1540.97, 1528.25],
  ['09/23/2071', 1569.47, 1528.14, 1528.2, 1569.31],
  ['09/24/2071', 1587.82, 1547.46, 1569.31, 1587.59],
  ['09/25/2071', 1629.08, 1584.1, 1587.63, 1616.48],
  ['09/26/2071', 1616.32, 1545.51, 1616.32, 1545.51],
  ['09/27/2071', 1557.48, 1519.44, 1545.3, 1521.17],
  ['09/28/2071', 1540.13, 1507.47, 1521.23, 1539.83],
  ['09/29/2071', 1546.43, 1528.02, 1539.98, 1528.22],
  ['09/30/2071', 1537.42, 1463.02, 1528.22, 1473.31],
  ['10/01/2071', 1479.86, 1451.55, 1473.31, 1462.57],
  ['10/02/2071', 1510.19, 1462.65, 1462.65, 1504.33],
  ['10/03/2071', 1532.09, 1504.37, 1504.37, 1518.73],
  ['10/04/2071', 1566.76, 1490.88, 1518.74, 1566.71],
  ['10/05/2071', 1594.75, 1559.49, 1566.79, 1591.84],
  ['10/06/2071', 1591.81, 1566.42, 1591.81, 1574.98],
  ['10/07/2071', 1575.17, 1518.43, 1575.14, 1518.43],
  ['10/08/2071', 1518.08, 1453.44, 1518.08, 1469.14],
  ['10/09/2071', 1495.38, 1451.71, 1468.74, 1487.17],
  ['10/10/2071', 1487.08, 1397.67, 1487.01, 1412.76],
  ['10/11/2071', 1412.66, 1353.87, 1412.65, 1380.35],
  ['10/12/2071', 1410.69, 1380.22, 1380.22, 1407.91],
  ['10/13/2071', 1435.22, 1397.61, 1407.86, 1398.39],
  ['10/14/2071', 1422.63, 1397.81, 1398.3, 1422.57],
  ['10/15/2071', 1429.62, 1398.48, 1422.69, 1398.59],
  ['10/16/2071', 1429.6, 1387.42, 1398.72, 1428.84],
  ['10/17/2071', 1471.68, 1428.88, 1428.9, 1447.41],
  ['10/18/2071', 1469.43, 1447.17, 1447.3, 1459.95],
  ['10/19/2071', 1459.86, 1385.18, 1459.68, 1387.85],
  ['10/20/2071', 1392.04, 1364.34, 1388.01, 1366.2]]);
  function splitData(rawData) {
    const categoryData = [];
    const values = [];
    for (var i = 0; i < rawData.length; i++) {
      categoryData.push(rawData[i].splice(0, 1)[0]);
      values.push(rawData[i]);
    }
    return {
      categoryData: categoryData,
      values: values,
    };
  }
  function calculateMA(dayCount) {
    var result = [];
    for (var i = 0, len = data0.values.length; i < len; i++) {
      if (i < dayCount) {
        result.push("-");
        continue;
      }
      var sum = 0;
      for (var j = 0; j < dayCount; j++) {
        sum += +data0.values[i - j][1];
      }
      result.push(sum / dayCount);
    }
    return result;
  }
  const option1 = {
    tooltip: {
      trigger: "axis",
      axisPointer: {
        type: "cross",
      },
    },
    grid: {
      show: true,
      backgroundColor: "#161616",
      left: "10%",
      right: "10%",
      bottom: "15%",
    },
    xAxis: {
      type: "category",
      data: data0.categoryData,
      boundaryGap: false,
      axisLine: { onZero: false },
      splitLine: { show: false },
      min: "dataMin",
      max: "dataMax",
    },
    yAxis: {
      scale: true,
      splitArea: {
        show: true,
      },
    },
    dataZoom: [
      {
        type: "inside",
        start: 50,
        end: 100,
      },
      {
        show: false,
        type: "slider",
        top: "90%",
        start: 50,
        end: 100,
      },
    ],
    series: [
      {
        name: "æ—¥K",
        type: "candlestick",
        data: data0.values,
        itemStyle: {
          color: upColor,
          color0: downColor,
          borderColor: upBorderColor,
          borderColor0: downBorderColor,
        },
        markPoint: {
          label: {
            formatter: function (param) {
              return param != null ? Math.round(param.value) + "" : "";
            },
          },
          tooltip: {
            formatter: function (param) {
              return param.name + "<br>" + (param.data.coord || "");
            },
          },
        },
        markLine: {
          symbol: ["none", "none"],
          data: [
            [
              {
                name: "from lowest to highest",
                type: "min",
                valueDim: "lowest",
                symbol: "circle",
                symbolSize: 5,
                label: {
                  show: false,
                },
                emphasis: {
                  label: {
                    show: false,
                  },
                },
              },
              {
                type: "max",
                valueDim: "highest",
                symbol: "circle",
                symbolSize: 5,
                label: {
                  show: false,
                },
                emphasis: {
                  label: {
                    show: false,
                  },
                },
              },
            ],
          ],
        },
      },
      {
        name: "MA5",
        type: "line",
        data: calculateMA(5),
        smooth: true,
        showSymbol: false,
        lineStyle: {
          opacity: 0.8,
        },
      },
      {
        name: "MA10",
        type: "line",
        data: calculateMA(10),
        smooth: true,
        showSymbol: false,
        lineStyle: {
          opacity: 0.8,
          symbolSize: 0.01,
        },
      },
      {
        name: "MA20",
        type: "line",
        data: calculateMA(20),
        smooth: true,
        showSymbol: false,
        lineStyle: {
          opacity: 0.8,
        },
      },
      {
        name: "MA30",
        type: "line",
        data: calculateMA(30),
        smooth: true,
        showSymbol: false,
        lineStyle: {
          opacity: 0.8,
        },
      },
    ],
  };
  return (
    <ReactEcharts  style={{height: 450, marginTop: -50, marginLeft: -5}} option={option1} />
  );
};

export default IndexChart;
